{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roger\\\\OneDrive\\\\Desktop\\\\Dasha_Next\\\\Dasha\\\\components\\\\ProductList.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, Fragment } from 'react';\nimport Product from './Product';\nimport Pagination from './Pagination';\nimport { LanguageContext } from '../contexts/LanguageContext';\n\nvar ProductList = function ProductList(_ref) {\n  var product = _ref.product;\n\n  var _useState = useState(product),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState('custom'),\n      category = _useState2[0],\n      setCategory = _useState2[1];\n\n  var _useState3 = useState(1),\n      currentPage = _useState3[0],\n      setCurrentPage = _useState3[1];\n\n  var _useState4 = useState(6),\n      postsPerPage = _useState4[0],\n      setPostsPerPage = _useState4[1];\n\n  var _useContext = useContext(LanguageContext),\n      currLang = _useContext.currLang,\n      language = _useContext.language;\n\n  var ru = language.russian.product;\n  var en = language.english.product;\n  var selectedOpt;\n  var filteredProducts = posts.filter(function (post) {\n    var filteredArray = [];\n\n    if (post.category === category) {\n      return filteredArray.push(post);\n    }\n  });\n  var indexOfLastPost = currentPage * postsPerPage;\n  var indexOfFirstPost = indexOfLastPost - postsPerPage;\n  var currentPosts = filteredProducts.slice(indexOfFirstPost, indexOfLastPost);\n\n  var paginate = function paginate(pageNumber) {\n    return setCurrentPage(pageNumber);\n  }; //Category Selection\n\n\n  if (category === 'custom') {\n    selectedOpt = currLang ? ru.custom_cards : en.custom_cards;\n  } else if (category === 'premade') {\n    selectedOpt = currLang ? ru.prepared_cards : en.prepared_cards;\n  } else {\n    selectedOpt = currLang ? ru.souvenirs : en.souvenirs;\n  }\n\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"store-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, selectedOpt), __jsx(Product, {\n    posts: currentPosts,\n    setCategory: setCategory,\n    setCurrentPage: setCurrentPage,\n    category: category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: filteredProducts.length,\n    paginate: paginate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nexport default ProductList;","map":{"version":3,"sources":["C:/Users/roger/OneDrive/Desktop/Dasha_Next/Dasha/components/ProductList.js"],"names":["React","useState","useContext","Fragment","Product","Pagination","LanguageContext","ProductList","product","posts","setPosts","category","setCategory","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","currLang","language","ru","russian","en","english","selectedOpt","filteredProducts","filter","post","filteredArray","push","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","custom_cards","prepared_cards","souvenirs","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,eAAT,QAAgC,6BAAhC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACRP,QAAQ,CAACO,OAAD,CADA;AAAA,MAC5BC,KAD4B;AAAA,MACrBC,QADqB;;AAAA,mBAEFT,QAAQ,CAAC,QAAD,CAFN;AAAA,MAE5BU,QAF4B;AAAA,MAElBC,WAFkB;;AAAA,mBAGIX,QAAQ,CAAC,CAAD,CAHZ;AAAA,MAG5BY,WAH4B;AAAA,MAGfC,cAHe;;AAAA,mBAIMb,QAAQ,CAAC,CAAD,CAJd;AAAA,MAI5Bc,YAJ4B;AAAA,MAIdC,eAJc;;AAAA,oBAKLd,UAAU,CAACI,eAAD,CALL;AAAA,MAK5BW,QAL4B,eAK5BA,QAL4B;AAAA,MAKlBC,QALkB,eAKlBA,QALkB;;AAMpC,MAAMC,EAAE,GAAGD,QAAQ,CAACE,OAAT,CAAiBZ,OAA5B;AACA,MAAMa,EAAE,GAAGH,QAAQ,CAACI,OAAT,CAAiBd,OAA5B;AACA,MAAIe,WAAJ;AACA,MAAIC,gBAAgB,GAAGf,KAAK,CAACgB,MAAN,CAAa,UAACC,IAAD,EAAU;AAC7C,QAAIC,aAAa,GAAG,EAApB;;AACA,QAAID,IAAI,CAACf,QAAL,KAAkBA,QAAtB,EAAgC;AAC/B,aAAOgB,aAAa,CAACC,IAAd,CAAmBF,IAAnB,CAAP;AACA;AACD,GALsB,CAAvB;AAOA,MAAMG,eAAe,GAAGhB,WAAW,GAAGE,YAAtC;AACA,MAAMe,gBAAgB,GAAGD,eAAe,GAAGd,YAA3C;AACA,MAAMgB,YAAY,GAAGP,gBAAgB,CAACQ,KAAjB,CAAuBF,gBAAvB,EAAyCD,eAAzC,CAArB;;AACA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACC,UAAD;AAAA,WAAgBpB,cAAc,CAACoB,UAAD,CAA9B;AAAA,GAAjB,CAnBoC,CAqBpC;;;AACA,MAAIvB,QAAQ,KAAK,QAAjB,EAA2B;AAC1BY,IAAAA,WAAW,GAAGN,QAAQ,GAAGE,EAAE,CAACgB,YAAN,GAAqBd,EAAE,CAACc,YAA9C;AACA,GAFD,MAEO,IAAIxB,QAAQ,KAAK,SAAjB,EAA4B;AAClCY,IAAAA,WAAW,GAAGN,QAAQ,GAAGE,EAAE,CAACiB,cAAN,GAAuBf,EAAE,CAACe,cAAhD;AACA,GAFM,MAEA;AACNb,IAAAA,WAAW,GAAGN,QAAQ,GAAGE,EAAE,CAACkB,SAAN,GAAkBhB,EAAE,CAACgB,SAA3C;AACA;;AAED,SACC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6Bd,WAA7B,CADD,EAEC,MAAC,OAAD;AAAS,IAAA,KAAK,EAAEQ,YAAhB;AAA8B,IAAA,WAAW,EAAEnB,WAA3C;AAAwD,IAAA,cAAc,EAAEE,cAAxE;AAAwF,IAAA,QAAQ,EAAEH,QAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,MAAC,UAAD;AAAY,IAAA,YAAY,EAAEI,YAA1B;AAAwC,IAAA,UAAU,EAAES,gBAAgB,CAACc,MAArE;AAA6E,IAAA,QAAQ,EAAEL,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CADD;AAOA,CArCD;;AAuCA,eAAe1B,WAAf","sourcesContent":["import React, { useState, useContext, Fragment } from 'react';\r\nimport Product from './Product';\r\nimport Pagination from './Pagination';\r\nimport { LanguageContext } from '../contexts/LanguageContext';\r\n\r\nconst ProductList = ({ product }) => {\r\n\tconst [ posts, setPosts ] = useState(product);\r\n\tconst [ category, setCategory ] = useState('custom');\r\n\tconst [ currentPage, setCurrentPage ] = useState(1);\r\n\tconst [ postsPerPage, setPostsPerPage ] = useState(6);\r\n\tconst { currLang, language } = useContext(LanguageContext);\r\n\tconst ru = language.russian.product;\r\n\tconst en = language.english.product;\r\n\tlet selectedOpt;\r\n\tlet filteredProducts = posts.filter((post) => {\r\n\t\tlet filteredArray = [];\r\n\t\tif (post.category === category) {\r\n\t\t\treturn filteredArray.push(post);\r\n\t\t}\r\n\t});\r\n\r\n\tconst indexOfLastPost = currentPage * postsPerPage;\r\n\tconst indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n\tconst currentPosts = filteredProducts.slice(indexOfFirstPost, indexOfLastPost);\r\n\tconst paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n\t//Category Selection\r\n\tif (category === 'custom') {\r\n\t\tselectedOpt = currLang ? ru.custom_cards : en.custom_cards;\r\n\t} else if (category === 'premade') {\r\n\t\tselectedOpt = currLang ? ru.prepared_cards : en.prepared_cards;\r\n\t} else {\r\n\t\tselectedOpt = currLang ? ru.souvenirs : en.souvenirs;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h1 className=\"store-title\">{selectedOpt}</h1>\r\n\t\t\t<Product posts={currentPosts} setCategory={setCategory} setCurrentPage={setCurrentPage} category={category}/>\r\n\t\t\t<Pagination postsPerPage={postsPerPage} totalPosts={filteredProducts.length} paginate={paginate} />\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default ProductList;\r\n"]},"metadata":{},"sourceType":"module"}