{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"C:\\\\Users\\\\roger\\\\OneDrive\\\\Desktop\\\\Dasha_Next\\\\Dasha\\\\contexts\\\\CartContext.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from 'react';\nimport update from 'immutability-helper';\nimport _ from 'lodash';\nexport const CartContext = createContext();\nexport function CartProvider(props) {\n  let initializeState = [];\n  let initialTotal;\n\n  if (false && sessionStorage.getItem('cart')) {\n    initializeState = JSON.parse(sessionStorage.getItem('cart'));\n  }\n\n  const {\n    0: shipSubmit,\n    1: setShipSubmit\n  } = useState(false); // INITALIZE THE CART\n\n  const {\n    0: cart,\n    1: setCart\n  } = useState(initializeState);\n\n  const checkCart = () => {\n    return cart;\n  };\n\n  const {\n    0: totalPrice,\n    1: setTotalPrice\n  } = useState(initialTotal); //Session Storage\n\n  useEffect(() => {\n    window.sessionStorage.setItem('cart', _JSON$stringify(cart));\n  }, [cart]);\n\n  const checkArr = (obj1, obj2) => {\n    return _.isEqual(obj1, obj2);\n  }; // DELETE ITEM\n\n\n  const deleteItem = e => {\n    let currentItem = e.currentTarget.value;\n    let cartCopy = cart;\n    cartCopy.splice(currentItem, 1); //Session Storage State\n\n    window.sessionStorage.setItem('cart', _JSON$stringify([...cartCopy]));\n    setCart([...cartCopy]);\n  }; // QUANTITY DECREASE\n\n\n  const quantityDecrease = e => {\n    let currentItem = e.target.value;\n    let cartCopy = cart;\n    cartCopy[currentItem].quantity = cartCopy[currentItem].quantity - 1; //Session Storage State\n\n    window.sessionStorage.setItem('cart', _JSON$stringify([...cartCopy]));\n\n    if (cartCopy[currentItem].quantity === 0) {\n      deleteItem(e);\n    }\n\n    setCart([...cartCopy]);\n  }; // QUANTITY INCREASE\n\n\n  const quantityIncrease = e => {\n    let currentItem = e.target.value;\n    let cartCopy = cart;\n    cartCopy[currentItem].quantity = cartCopy[currentItem].quantity + 1; //Session Storage State\n\n    window.sessionStorage.setItem('cart', _JSON$stringify([...cartCopy]));\n    setCart([...cartCopy]);\n  }; // ADD ITEM\n  // Change to reflect translation changes\n\n\n  const addItem = obj => {\n    let dataCheck = false;\n    let noRepeat = false;\n\n    if (cart.length != 0) {\n      cart.map((e, i) => {\n        if (e.productName.en === obj.productName.en) {\n          const prevVal = e.productParams;\n          const currentVal = obj.productParams;\n          dataCheck = checkArr(prevVal, currentVal);\n\n          if (dataCheck === true) {\n            const object = e;\n            const cartCopy = cart;\n            const newObj = update(object, {\n              quantity: {\n                $set: object.quantity + obj.quantity\n              }\n            });\n            const newState = update(cartCopy, {\n              [i]: {\n                $set: newObj\n              }\n            });\n            setCart(newState);\n            noRepeat = true;\n          }\n        }\n      });\n    } else {\n      setCart([...cart, obj]);\n    }\n\n    if (dataCheck === false && noRepeat === false) {\n      setCart([...cart, obj]);\n    }\n  };\n\n  return __jsx(CartContext.Provider, {\n    value: {\n      cart,\n      setCart,\n      checkCart,\n      addItem,\n      deleteItem,\n      quantityIncrease,\n      quantityDecrease,\n      shipSubmit,\n      setShipSubmit,\n      totalPrice,\n      setTotalPrice\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["C:/Users/roger/OneDrive/Desktop/Dasha_Next/Dasha/contexts/CartContext.js"],"names":["React","createContext","useState","useEffect","update","_","CartContext","CartProvider","props","initializeState","initialTotal","sessionStorage","getItem","JSON","parse","shipSubmit","setShipSubmit","cart","setCart","checkCart","totalPrice","setTotalPrice","window","setItem","checkArr","obj1","obj2","isEqual","deleteItem","e","currentItem","currentTarget","value","cartCopy","splice","quantityDecrease","target","quantity","quantityIncrease","addItem","obj","dataCheck","noRepeat","length","map","i","productName","en","prevVal","productParams","currentVal","object","newObj","$set","newState","children"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport update from 'immutability-helper';\r\nimport _ from 'lodash';\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport function CartProvider(props) {\r\n\tlet initializeState = [];\r\n\tlet initialTotal;\r\n\tif (typeof window !== 'undefined' && sessionStorage.getItem('cart')) {\r\n\t\tinitializeState = JSON.parse(sessionStorage.getItem('cart'));\r\n\t}\r\n\r\n\tconst [ shipSubmit, setShipSubmit ] = useState(false);\r\n\r\n\t// INITALIZE THE CART\r\n\tconst [ cart, setCart ] = useState(initializeState);\r\n\tconst checkCart = () => {\r\n\t\treturn cart;\r\n\t};\r\n\tconst [ totalPrice, setTotalPrice ] = useState(initialTotal);\r\n\t//Session Storage\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\twindow.sessionStorage.setItem('cart', JSON.stringify(cart));\r\n\t\t\t\r\n\t\t},\r\n\t\t[ cart ]\r\n\t);\r\n\r\n\tconst checkArr = (obj1, obj2) => {\r\n\t\treturn _.isEqual(obj1, obj2);\r\n\t};\r\n\r\n\t// DELETE ITEM\r\n\tconst deleteItem = (e) => {\r\n\t\tlet currentItem = e.currentTarget.value;\r\n\t\tlet cartCopy = cart;\r\n\t\tcartCopy.splice(currentItem, 1);\r\n\r\n\t\t//Session Storage State\r\n\r\n\t\twindow.sessionStorage.setItem('cart', JSON.stringify([ ...cartCopy ]));\r\n\t\tsetCart([ ...cartCopy ]);\r\n\t};\r\n\r\n\t// QUANTITY DECREASE\r\n\tconst quantityDecrease = (e) => {\r\n\t\tlet currentItem = e.target.value;\r\n\t\tlet cartCopy = cart;\r\n\t\tcartCopy[currentItem].quantity = cartCopy[currentItem].quantity - 1;\r\n\r\n\t\t//Session Storage State\r\n\r\n\t\twindow.sessionStorage.setItem('cart', JSON.stringify([ ...cartCopy ]));\r\n\t\tif (cartCopy[currentItem].quantity === 0) {\r\n\t\t\tdeleteItem(e);\r\n\t\t}\r\n\t\tsetCart([ ...cartCopy ]);\r\n\t};\r\n\r\n\t// QUANTITY INCREASE\r\n\tconst quantityIncrease = (e) => {\r\n\t\tlet currentItem = e.target.value;\r\n\t\tlet cartCopy = cart;\r\n\t\tcartCopy[currentItem].quantity = cartCopy[currentItem].quantity + 1;\r\n\r\n\t\t//Session Storage State\r\n\r\n\t\twindow.sessionStorage.setItem('cart', JSON.stringify([ ...cartCopy ]));\r\n\t\tsetCart([ ...cartCopy ]);\r\n\t};\r\n\r\n\t// ADD ITEM\r\n\t// Change to reflect translation changes\r\n\tconst addItem = (obj) => {\r\n\t\tlet dataCheck = false;\r\n\t\tlet noRepeat = false;\r\n\r\n\t\tif (cart.length != 0) {\r\n\t\t\tcart.map((e, i) => {\r\n\t\t\t\tif (e.productName.en === obj.productName.en) {\r\n\t\t\t\t\tconst prevVal = e.productParams;\r\n\t\t\t\t\tconst currentVal = obj.productParams;\r\n\t\t\t\t\tdataCheck = checkArr(prevVal, currentVal);\r\n\t\t\t\t\tif (dataCheck === true) {\r\n\t\t\t\t\t\tconst object = e;\r\n\t\t\t\t\t\tconst cartCopy = cart;\r\n\t\t\t\t\t\tconst newObj = update(object, { quantity: { $set: object.quantity + obj.quantity } });\r\n\t\t\t\t\t\tconst newState = update(cartCopy, { [i]: { $set: newObj } });\r\n\t\t\t\t\t\tsetCart(newState);\r\n\t\t\t\t\t\tnoRepeat = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetCart([ ...cart, obj ]);\r\n\t\t}\r\n\t\tif (dataCheck === false && noRepeat === false) {\r\n\t\t\tsetCart([ ...cart, obj ]);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<CartContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tcart,\r\n\t\t\t\tsetCart,\r\n\t\t\t\tcheckCart,\r\n\t\t\t\taddItem,\r\n\t\t\t\tdeleteItem,\r\n\t\t\t\tquantityIncrease,\r\n\t\t\t\tquantityDecrease,\r\n\t\t\t\tshipSubmit,\r\n\t\t\t\tsetShipSubmit,\r\n\t\t\t\ttotalPrice,\r\n\t\t\t\tsetTotalPrice\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</CartContext.Provider>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}